@page "/order-details/{OrderId:int}"
@using ClientApp.Models
@using ClientApp.Services
@inject IOrderService OrderService
@inject NavigationManager NavigationManager

<PageTitle>Detalles de la Orden</PageTitle>

<div class="container">
    <div class="my-4">
        <button class="btn btn-secondary mb-3" @onclick="GoBack">
            <i class="bi bi-arrow-left"></i> Volver
        </button>

        @if (order == null)
        {
            <div class="d-flex justify-content-center">
                <div class="spinner-border" role="status">
                    <span class="visually-hidden">Cargando...</span>
                </div>
            </div>
        }
        else
        {
            <div class="alert alert-success mb-4">
                <h4 class="alert-heading">¡Orden creada con éxito!</h4>
                <p>Su orden ha sido procesada correctamente.</p>
            </div>

            <div class="card mb-4">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">Detalles de la Orden #@order.Id</h5>
                </div>
                <div class="card-body">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <p><strong>Cliente:</strong> @order.CustomerName</p>
                            <p><strong>Fecha:</strong> @order.OrderDate.ToString("dd/MM/yyyy HH:mm")</p>
                        </div>
                        <div class="col-md-6 text-md-end">
                            <p><strong>ID de Orden:</strong> @order.Id</p>
                            <p><strong>Total:</strong> $@order.TotalAmount.ToString("F2")</p>
                        </div>
                    </div>

                    <h6 class="border-bottom pb-2 mb-3">Productos</h6>
                    <div class="table-responsive">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Producto</th>
                                    <th>Precio</th>
                                    <th>Cantidad</th>
                                    <th>Subtotal</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in order.Items)
                                {
                                    <tr>
                                        <td>@item.ProductName</td>
                                        <td>$@item.UnitPrice.ToString("F2")</td>
                                        <td>@item.Quantity</td>
                                        <td>$@item.Subtotal.ToString("F2")</td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot>
                                <tr>
                                    <td colspan="3" class="text-end"><strong>Total:</strong></td>
                                    <td><strong>$@order.TotalAmount.ToString("F2")</strong></td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>

            <div class="d-flex justify-content-between">
                <a href="/products" class="btn btn-primary">Continuar comprando</a>
                <a href="/customer-orders/@order.CustomerId" class="btn btn-info">Ver todas mis órdenes</a>
            </div>
        }
    </div>
</div>

@code {
    [Parameter]
    public int OrderId { get; set; }

    private OrderDto? order;

    protected override async Task OnInitializedAsync()
    {
        order = await OrderService.GetOrderByIdAsync(OrderId);
    }

    private void GoBack()
    {
        NavigationManager.NavigateTo("/");
    }
}
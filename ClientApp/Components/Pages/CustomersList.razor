@page "/customers-list"
@using ClientApp.Models
@using ClientApp.Services
@inject ICustomerService CustomerService
@inject NavigationManager NavigationManager

<PageTitle>Lista de Clientes</PageTitle>

<div class="container">
    <div class="d-flex justify-content-between align-items-center my-4">
        <h3>Lista de Clientes</h3>
        <a href="/register" class="btn btn-primary">Nuevo Cliente</a>
    </div>

    @if (customers == null)
    {
        <div class="d-flex justify-content-center">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Cargando...</span>
            </div>
        </div>
    }
    else if (!customers.Any())
    {
        <div class="alert alert-info">No hay clientes registrados.</div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Nombre</th>
                        <th>Email</th>
                        <th>Dirección</th>
                        <th>Fecha de Registro</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var customer in customers)
                    {
                        <tr>
                            <td>@customer.Id</td>
                            <td>@customer.Name</td>
                            <td>@customer.Email</td>
                            <td>@customer.Address</td>
                            <td>@customer.RegistrationDate.ToShortDateString()</td>
                            <td>
                                <button class="btn btn-sm btn-info me-1" @onclick="() => ViewOrders(customer.Id)">
                                    Ver Órdenes
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

@code {
    private List<CustomerDto>? customers;

    protected override async Task OnInitializedAsync()
    {
        customers = await CustomerService.GetAllCustomersAsync();
    }

    private void ViewOrders(int customerId)
    {
        NavigationManager.NavigateTo($"/customer-orders/{customerId}");
    }
}